//
// https://github.com/mazzy-ax/SysUtil
//
class SysQueryTest extends SysTestCase
{

    //
    // https://github.com/mazzy-ax/SysUtil
    //
    void testValue_Container()
    {
        container   con         = [InventLocationType::Quarantine, InventLocationType::Standard];
        str         range       = SysQuery::value(con);
        str         expected    = strfmt('%1,%2', InventLocationType::Quarantine, InventLocationType::Standard);
        ;

        this.assertEquals(expected, range);
    }

    //
    // https://github.com/mazzy-ax/SysUtil
    //
    void testValue_List()
    {
        container   con         = [InventLocationType::Quarantine, InventLocationType::Standard];
        List        list        = ListUtil::newFrom(con);
        str         range       = SysQuery::value(list);
        str         expected    = '1,0';
        ;

        this.assertEquals(expected, range);
    }

    //
    // https://github.com/mazzy-ax/SysUtil
    //
    void testValue_Set()
    {
        container   con         = [InventLocationType::Quarantine, InventLocationType::Standard];
        Set         set         = SetUtil::newFrom(con);
        str         range       = SysQuery::value(set);
        str         expected    = '0,1';
        ;

        this.assertEquals(expected, range);
    }

    //
    // https://github.com/mazzy-ax/SysUtil
    //
    void testValueNot_Container()
    {
        container   con         = [InventLocationType::Quarantine, InventLocationType::Standard];
        str         range       = SysQuery::valueNot(con);
        str         expected    = strfmt('!%1,!%2', InventLocationType::Quarantine, InventLocationType::Standard);
        ;

        this.assertEquals(expected, range);
    }

    //
    // https://github.com/mazzy-ax/SysUtil
    //
    void testValueNot_List()
    {
        container   con         = [InventLocationType::Quarantine, InventLocationType::Standard];
        List        list        = ListUtil::newFrom(con);
        str         range       = SysQuery::valueNot(list);
        str         expected    = '!1,!0';
        ;

        this.assertEquals(expected, range);
    }

    //
    // https://github.com/mazzy-ax/SysUtil
    //
    void testValueNot_Set()
    {
        container   con         = [InventLocationType::Quarantine, InventLocationType::Standard];
        Set         set         = SetUtil::newFrom(con);
        str         range       = SysQuery::valueNot(set);
        str         expected    = '!0,!1';
        ;

        this.assertEquals(expected, range);
    }
}