//
// https://github.com/mazzy-ax/SysUtil
//
class SysQueryTest extends SysTestCase
{

    //
    // https://github.com/mazzy-ax/SysUtil
    //
    void testValue_Container()
    {
        InventLocation  inventLocation;
        container       con         = [InventLocationType::Quarantine, InventLocationType::Standard];
        str             range       = SysQuery::value(con);
        Query           q           = new Query();
        QueryRun        qr;
        boolean         found;
        ;

        q.addDataSource(inventLocation.TableId)
            .addRange(fieldnum(InventLocation, InventLocationType))
            .value(range);

        qr = new QueryRun(q);
        while(qr.next())
        {
            inventLocation = qr.get(inventLocation.TableId);
            this.assertNotEqual(0, confind(con, inventLocation.InventLocationType));
            found = true;
        }

        this.assertTrue(found);
    }

    //
    // https://github.com/mazzy-ax/SysUtil
    //
    void testValueNot_Container()
    {
        InventLocation  inventLocation;
        container       con         = [InventLocationType::Quarantine, InventLocationType::Standard];
        str             range       = SysQuery::valueNot(con);
        Query           q           = new Query();
        QueryRun        qr;
        boolean         found;
        ;

        q.addDataSource(inventLocation.TableId)
            .addRange(fieldnum(InventLocation, InventLocationType))
            .value(range);

        qr = new QueryRun(q);
        while(qr.next())
        {
            inventLocation = qr.get(inventLocation.TableId);
            this.assertEquals(0, confind(con, inventLocation.InventLocationType));
            found = true;
        }

        this.assertTrue(found);
    }
}