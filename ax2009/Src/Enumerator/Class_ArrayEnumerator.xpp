//
// https://github.com/mazzy-ax/SysUtil
//
public class ArrayEnumerator implements Enumerator
{
    Array   arr;
    int     idx;

    public anytype current()
    {
        if( arr )
        {
            // мы не делаем никаких проверок индекса
            // ядро выбросит исключение, если индекс выходит за пределы массива
            return arr.value(idx);
        }

        return AnytypeUtil::undefined();
    }

    public str definitionString()
    {
        return 'Array enumerator';
    }

    // метод публичный, чтобы объект данного класса можно было создавать из classFactory и инициализировать из всевозможных unpack
    // не вызывайте этот метод напрямую
    public void init(Array _arr)
    {;
        arr = _arr;
    }


    public boolean moveNext()
    {
        if(arr && idx < arr.lastIndex())
        {
            idx++;
            return true;
        }

        return false;
    }

    public void new(Array _arr)
    {
        this.init(_arr);
    }


    public void reset()
    {
        idx = 0;
    }

    public str toString()
    {
        // поскольку этот метод может вызваться в отладчике еще до инициализации,
        // то в этом методе нельзя использовать методы класса и нельзя бросать исключение
        // и ни в коем случае не бросаем исключение на неинициализированные значения
        return AnytypeUtil::toString(this.current());
    }

    public static ArrayEnumerator construct(Array arr)
    {
        return new ArrayEnumerator(arr);
    }


    public static ClassDescription description()
    {
        return "An enumerator to traverse an array.";
    }

}